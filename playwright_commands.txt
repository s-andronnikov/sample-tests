--- AI Instructions ---
Python package versions:
 - python: >=3.12
 - pytest: >=8.4
 - playwright: >=v1.53
Base JS UI frameworks is:
 - react: >=18.3
 - ag-grid-enterprise: >=34
 - ag-grid-react: >=34

Testing framework is pytest + playwright-python

Base Tests structures:
 - Types of tests:
   - API: folder /api
   - UI: folder /ui

Currently need to work with UI tests only.
UI tests stricture:
 - All tests located at /ui/tests folder and can be separated by following modules:
   - tax-depreciation: urls with __host__/depreciation/*
   - dit: urls with {host_url}/dit/*
   - provision: urls with {host_url}/provision/*
   - nova: urls with {host_url}/nova/*
 - Each test files should has tests associated to page. Pages located at ui/pages and should be separated by modules in tests way.
 - Each isolated element on page like list grid or form can be isolated as separated component. Components located as /ui/pages/components
   and should be located using module/page folders structure.

Helpers located: /ui/helpers
 - url_helper.py: helper to build url using defined routes from UIRoutes (common/routes.py) and dynamic variables like "depr_case_id"
 - ag_grid_helper.py: common helper with locators and actions for Ag-Grid grids.

Fixtures located at: ui/fixtures.py. In general using it to define pages as fixtures. Each page usually has two fixture - first: page itself,
second one authenticated fixture with login action injections.



---------------------------------

Can you add test for Configurations Company page. URL is {host_url}/depreciation/{depr_case_id}/configurations/company

You should cover following actions:

1. Main Company page



Steps:
 - Go to the Listing page  (`authenticated_asset_class_page.open_with_id(base_settings.depr_case_id)`)
 - Check that page is loaded and grip exists
 - Select first row from the grid
 - Do the hover action on "Actions" cell for selected row
 - On hover actions icons should appear and have a pencil for edit
 - Click on edit icon
 - We should see ".configurations-form-wrapper" toster with edit form inside (`form_container`)
 - <p class="title"> should have text "Edit " + text from cell of selected row and Name column
 - `name_input` should and have correct name in value
 - Change the name to "112" + prev name
 -  `action_button_save` should became active
 - Click to save button.
 - edit form should hide (`self.form_container.should_be_visible(should_visible=False)`)
 - Asset classes listing grid should have row with new name





------  DELETE
/browser_generate_playwright_test
Can you add step to test deletion of asset class
Steps:
 - Go to assets class list page (`setup_authenticated_page`)
 - Check that page is loaded (`setup_authenticated_page`)
 - Select first row from the asset classes list grid
 - Click on this row
 - Get the Name of this record
 - Click on delete icon (.trash) in Actions column
 - Delete action should open confirmation popup (.confirmation) with header (.header) "Delete Asset Class " + Name of record
 - This popup should have active "Delete" button.
 - Click on "Delete" button.
 - Check success result:
    - Confirmation popup should disappear
    - Should be shown toster message with text "Successfully Deleted"
    - Deleted record should disappear from the listing grid



can you create a new tests for the Depreciation profile page, url is http://localhost:3000/depreciation/9aa52b3f-f76d-438d-9557-92984bd9e1fc/configurations/depreciation-profile

1. Page load. Test should open the page and verify the following
  - Page loaded successfully
  - Page should have title "Depreciation Profiles"
  - Page should finish grid data loading
  - Page should have grid with following headers expected_headers = [
            "Name",
            "Profile Description",
            "Class Life",
            "Bonus Eligible",
            "Mid-Quarter Eligible",
            "Amortization",
            "Rate Type",
            "Method",
            "Convention",
            "Life",
            "Tags",
            "Actions"
        ]


